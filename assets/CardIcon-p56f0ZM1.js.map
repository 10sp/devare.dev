{"version":3,"file":"CardIcon-p56f0ZM1.js","sources":["../../src/features/cards/api/getRssFeed.ts","../../src/features/cards/components/rssCard/ArticleItem.tsx","../../src/features/cards/components/rssCard/CardIcon.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query'\r\nimport * as htmlparser2 from 'htmlparser2'\r\nimport { axios } from 'src/lib/axios'\r\nimport { ExtractFnReturnType, QueryConfig } from 'src/lib/react-query'\r\nimport { Article } from 'src/types'\r\n\r\ntype RssInfoType = {\r\n  title: string\r\n  link: string\r\n  icon?: string\r\n}\r\n\r\nexport const getRssUrlFeed = async (rssUrl: string): Promise<RssInfoType> => {\r\n  return axios.get('/engine/rss_info/', { params: { url: rssUrl } })\r\n}\r\n\r\nconst getArticles = async (feedUrl: string): Promise<Article[]> => {\r\n  const res: string = await axios.get(`/engine/remote_feed?feedUrl=${feedUrl}`)\r\n  try {\r\n    const feed = htmlparser2.parseFeed(res)\r\n    return feed?.items?.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        title: item.title,\r\n        url: item.link,\r\n        published_at: +(item.pubDate || new Date()),\r\n        source: 'customFeed',\r\n      }\r\n    }) as Article[]\r\n  } catch (err) {}\r\n  return []\r\n}\r\n\r\ntype QueryFnType = typeof getArticles\r\n\r\ntype UseGetArticlesOptions = {\r\n  config?: QueryConfig<QueryFnType>\r\n  feedUrl: string\r\n}\r\n\r\nexport const useRssFeed = ({ feedUrl, config }: UseGetArticlesOptions) => {\r\n  return useQuery<ExtractFnReturnType<QueryFnType>>({\r\n    ...config,\r\n    queryKey: [feedUrl],\r\n    queryFn: () => getArticles(feedUrl),\r\n  })\r\n}\r\n","import { MdAccessTime } from 'react-icons/md'\r\nimport { CardItemWithActions, CardLink } from 'src/components/Elements'\r\nimport { Attributes } from 'src/lib/analytics'\r\nimport { Article, BaseItemPropsType } from 'src/types'\r\nimport { format } from 'timeago.js'\r\n\r\nconst ArticleItem = (props: BaseItemPropsType<Article>) => {\r\n  const { item, index, selectedTag, analyticsTag } = props\r\n  if (!item) {\r\n    return null\r\n  }\r\n  return (\r\n    <CardItemWithActions\r\n      source={analyticsTag}\r\n      sourceType=\"rss\"\r\n      index={index}\r\n      key={index}\r\n      item={item}\r\n      cardItem={\r\n        <>\r\n          <CardLink\r\n            link={item.url}\r\n            analyticsAttributes={{\r\n              [Attributes.TRIGERED_FROM]: 'card',\r\n              [Attributes.TITLE]: item.title,\r\n              [Attributes.LINK]: item.url,\r\n              [Attributes.SOURCE]: analyticsTag,\r\n              [Attributes.LANGUAGE]: selectedTag?.value,\r\n            }}>\r\n            {item.image_url && <img className=\"rssImage\" src={item.image_url} alt={item.title} />}\r\n            <div className=\"subTitle\">{item.title}</div>\r\n          </CardLink>\r\n          <>\r\n            <p className=\"rowDescription\">\r\n              <span className=\"rowItem\">\r\n                <MdAccessTime className={'rowTitleIcon'} />\r\n                {format(new Date(item.published_at))}\r\n              </span>\r\n            </p>\r\n            {/* <p className=\"rowDetails\">\r\n              <ColoredLanguagesBadge languages={item.tags.slice(0, 4)} />\r\n            </p> */}\r\n          </>\r\n        </>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default ArticleItem\r\n","import { BsRssFill } from 'react-icons/bs'\r\n\r\nconst CardIcon = (props: { url?: string }) => {\r\n  const { url } = props\r\n  return url ? <img src={url} alt=\"\" /> : <BsRssFill className=\"rss\" />\r\n}\r\n\r\nexport default CardIcon\r\n"],"names":["getRssUrlFeed","rssUrl","axios","getArticles","feedUrl","res","feed","htmlparser2.parseFeed","_a","item","useRssFeed","config","useQuery","ArticleItem","props","index","selectedTag","analyticsTag","jsx","CardItemWithActions","jsxs","Fragment","CardLink","Attributes","MdAccessTime","format","CardIcon","url","BsRssFill"],"mappings":"0KAYO,MAAMA,EAAgB,MAAOC,GAC3BC,EAAM,IAAI,oBAAqB,CAAE,OAAQ,CAAE,IAAKD,CAAA,EAAU,EAG7DE,EAAc,MAAOC,GAAwC,OACjE,MAAMC,EAAc,MAAMH,EAAM,IAAI,+BAA+BE,CAAO,EAAE,EAC5E,GAAI,CACF,MAAME,EAAOC,EAAsBF,CAAG,EACtC,OAAOG,EAAAF,GAAA,YAAAA,EAAM,QAAN,YAAAE,EAAa,IAAKC,IAChB,CACL,GAAIA,EAAK,GACT,MAAOA,EAAK,MACZ,IAAKA,EAAK,KACV,aAAc,EAAEA,EAAK,aAAe,MACpC,OAAQ,YAAA,GAGd,MAAc,CAAC,CACf,MAAO,CAAA,CACT,EASaC,EAAa,CAAC,CAAE,QAAAN,EAAS,OAAAO,KAC7BC,EAA2C,CAChD,GAAGD,EACH,SAAU,CAACP,CAAO,EAClB,QAAS,IAAMD,EAAYC,CAAO,CAAA,CACnC,ECvCGS,EAAeC,GAAsC,CACzD,KAAM,CAAE,KAAAL,EAAM,MAAAM,EAAO,YAAAC,EAAa,aAAAC,GAAiBH,EACnD,OAAKL,EAIHS,EAAAA,IAACC,EAAA,CACC,OAAQF,EACR,WAAW,MACX,MAAAF,EAEA,KAAAN,EACA,SACEW,EAAAA,KAAAC,WAAA,CACE,SAAA,CAAAD,EAAAA,KAACE,EAAA,CACC,KAAMb,EAAK,IACX,oBAAqB,CACnB,CAACc,EAAW,aAAa,EAAG,OAC5B,CAACA,EAAW,KAAK,EAAGd,EAAK,MACzB,CAACc,EAAW,IAAI,EAAGd,EAAK,IACxB,CAACc,EAAW,MAAM,EAAGN,EACrB,CAACM,EAAW,QAAQ,EAAGP,GAAA,YAAAA,EAAa,KAAA,EAErC,SAAA,CAAAP,EAAK,WAAaS,EAAAA,IAAC,MAAA,CAAI,UAAU,WAAW,IAAKT,EAAK,UAAW,IAAKA,EAAK,KAAA,CAAO,EACnFS,EAAAA,IAAC,MAAA,CAAI,UAAU,WAAY,WAAK,KAAA,CAAM,CAAA,CAAA,CAAA,EAExCA,EAAAA,IAAAG,EAAAA,SAAA,CACE,eAAC,IAAA,CAAE,UAAU,iBACX,SAAAD,EAAAA,KAAC,OAAA,CAAK,UAAU,UACd,SAAA,CAAAF,EAAAA,IAACM,EAAA,CAAa,UAAW,cAAA,CAAgB,EACxCC,EAAO,IAAI,KAAKhB,EAAK,YAAY,CAAC,CAAA,CAAA,CACrC,EACF,CAAA,CAIF,CAAA,CAAA,CACF,CAAA,EA3BGM,CAAA,EAPA,IAsCX,EC7CMW,EAAYZ,GAA4B,CAC5C,KAAM,CAAE,IAAAa,GAAQb,EAChB,OAAOa,EAAMT,EAAAA,IAAC,MAAA,CAAI,IAAKS,EAAK,IAAI,EAAA,CAAG,EAAKT,EAAAA,IAACU,EAAA,CAAU,UAAU,KAAA,CAAM,CACrE"}