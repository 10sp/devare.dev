{"version":3,"file":"CustomContentRssCard-Bpq4ZfYB.js","sources":["../../src/features/cards/components/rssCard/SortableArticleItem.tsx","../../src/features/cards/components/rssCard/CustomContentRssCard.tsx"],"sourcesContent":["import { useSortable } from '@dnd-kit/sortable'\r\nimport { CSS } from '@dnd-kit/utilities'\r\nimport { useUserPreferences } from 'src/stores/preferences'\r\nimport { Article } from 'src/types'\r\nimport ArticleItem from './ArticleItem'\r\n\r\ntype SortableArticleItemProps = {\r\n  item: Article\r\n  index: number\r\n  analyticsTag: string\r\n}\r\n\r\nexport const SortableArticleItem = ({ item, index, analyticsTag }: SortableArticleItemProps) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\r\n    id: item.id,\r\n  })\r\n\r\n  const { isOrganizeMode } = useUserPreferences()\r\n\r\n  const style = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n    opacity: isDragging ? 0.5 : 1,\r\n    zIndex: isDragging ? 100 : 'auto',\r\n    position: 'relative' as const,\r\n  }\r\n\r\n  return (\r\n    <div ref={setNodeRef} style={style} className=\"sortable-article-item\">\r\n      {isOrganizeMode && <button className=\"article-drag-handle\" {...attributes} {...listeners} />}\r\n      <div style={{ pointerEvents: isOrganizeMode ? 'none' : 'auto' }}>\r\n        <ArticleItem\r\n          item={item}\r\n          index={index}\r\n          analyticsTag={analyticsTag}\r\n          selectedTag={undefined}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {\r\n  DndContext,\r\n  DragEndEvent,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n} from '@dnd-kit/core'\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  sortableKeyboardCoordinates,\r\n  verticalListSortingStrategy,\r\n} from '@dnd-kit/sortable'\r\nimport { useEffect, useState } from 'react'\r\nimport { Card } from 'src/components/Elements'\r\nimport { ListComponent } from 'src/components/List'\r\nimport { SortableArticleItem } from 'src/features/cards/components/rssCard/SortableArticleItem'\r\nimport { useUserPreferences } from 'src/stores/preferences'\r\nimport { Article, CardPropsType } from 'src/types'\r\nimport CardIcon from './CardIcon'\r\nimport './rssCard.css'\r\n\r\nexport function CustomContentRssCard(props: CardPropsType) {\r\n  const { meta } = props\r\n  const { userCustomCards, updateUserCustomCards } = useUserPreferences()\r\n\r\n  // Use custom content if available\r\n  const customContent = meta.customContent as Article[] | undefined\r\n\r\n  // State for managing article order\r\n  const [articles, setArticles] = useState<Article[]>([])\r\n\r\n  // Initialize articles from custom content\r\n  useEffect(() => {\r\n    if (customContent) {\r\n      setArticles(customContent)\r\n    }\r\n  }, [customContent])\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  )\r\n\r\n  const handleDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event\r\n\r\n    if (active.id !== over?.id) {\r\n      const oldIndex = articles.findIndex((item) => item.id === active.id)\r\n      const newIndex = articles.findIndex((item) => item.id === over?.id)\r\n\r\n      if (oldIndex !== -1 && newIndex !== -1) {\r\n        const newArticles = arrayMove(articles, oldIndex, newIndex)\r\n        setArticles(newArticles)\r\n\r\n        // Update the user preferences with the new order\r\n        const updatedCards = userCustomCards.map((card) =>\r\n          card.value === meta.value ? { ...card, customContent: newArticles } : card\r\n        )\r\n        updateUserCustomCards(updatedCards)\r\n      }\r\n    }\r\n  }\r\n\r\n  const renderItem = (item: Article, index: number) => (\r\n    <SortableArticleItem item={item} key={item.id} index={index} analyticsTag={meta.analyticsTag} />\r\n  )\r\n\r\n  const HeaderTitle = () => {\r\n    return (\r\n      <>\r\n        <p className=\"maxTitle\"> {meta.label} </p>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      titleComponent={<HeaderTitle />}\r\n      {...props}\r\n      meta={{ ...meta, icon: <CardIcon url={meta.icon as string} /> }}>\r\n      <DndContext sensors={sensors} onDragEnd={handleDragEnd}>\r\n        <SortableContext\r\n          items={articles.map((item) => item.id)}\r\n          strategy={verticalListSortingStrategy}>\r\n          <ListComponent items={articles} isLoading={false} renderItem={renderItem} />\r\n        </SortableContext>\r\n      </DndContext>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":["SortableArticleItem","item","index","analyticsTag","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","isOrganizeMode","useUserPreferences","style","CSS","jsx","ArticleItem","CustomContentRssCard","props","meta","userCustomCards","updateUserCustomCards","customContent","articles","setArticles","useState","useEffect","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","sortableKeyboardCoordinates","handleDragEnd","event","active","over","oldIndex","newIndex","newArticles","arrayMove","updatedCards","card","renderItem","HeaderTitle","Fragment","jsxs","Card","CardIcon","DndContext","SortableContext","verticalListSortingStrategy","ListComponent"],"mappings":"mQAYO,MAAMA,EAAsB,CAAC,CAAE,KAAAC,EAAM,MAAAC,EAAO,aAAAC,KAA6C,CAC9F,KAAM,CAAE,WAAAC,EAAY,UAAAC,EAAW,WAAAC,EAAY,UAAAC,EAAW,WAAAC,EAAY,WAAAC,CAAA,EAAeC,EAAY,CAC3F,GAAIT,EAAK,EAAA,CACV,EAEK,CAAE,eAAAU,CAAA,EAAmBC,EAAA,EAErBC,EAAQ,CACZ,UAAWC,EAAI,UAAU,SAASP,CAAS,EAC3C,WAAAC,EACA,QAASC,EAAa,GAAM,EAC5B,OAAQA,EAAa,IAAM,OAC3B,SAAU,UAAA,EAGZ,cACG,MAAA,CAAI,IAAKH,EAAY,MAAAO,EAAc,UAAU,wBAC3C,SAAA,CAAAF,SAAmB,SAAA,CAAO,UAAU,sBAAuB,GAAGP,EAAa,GAAGC,EAAW,EAC1FU,MAAC,OAAI,MAAO,CAAE,cAAeJ,EAAiB,OAAS,QACrD,SAAAI,EAAAA,IAACC,EAAA,CACC,KAAAf,EACA,MAAAC,EACA,aAAAC,EACA,YAAa,MAAA,CAAA,CACf,CACF,CAAA,EACF,CAEJ,ECjBO,SAASc,EAAqBC,EAAsB,CACzD,KAAM,CAAE,KAAAC,GAASD,EACX,CAAE,gBAAAE,EAAiB,sBAAAC,CAAA,EAA0BT,EAAA,EAG7CU,EAAgBH,EAAK,cAGrB,CAACI,EAAUC,CAAW,EAAIC,EAAAA,SAAoB,CAAA,CAAE,EAGtDC,EAAAA,UAAU,IAAM,CACVJ,GACFE,EAAYF,CAAa,CAE7B,EAAG,CAACA,CAAa,CAAC,EAElB,MAAMK,EAAUC,EACdC,EAAUC,CAAa,EACvBD,EAAUE,EAAgB,CACxB,iBAAkBC,CAAA,CACnB,CAAA,EAGGC,EAAiBC,GAAwB,CAC7C,KAAM,CAAE,OAAAC,EAAQ,KAAAC,CAAA,EAASF,EAEzB,GAAIC,EAAO,MAAOC,GAAA,YAAAA,EAAM,IAAI,CAC1B,MAAMC,EAAWd,EAAS,UAAWtB,GAASA,EAAK,KAAOkC,EAAO,EAAE,EAC7DG,EAAWf,EAAS,UAAWtB,GAASA,EAAK,MAAOmC,GAAA,YAAAA,EAAM,GAAE,EAElE,GAAIC,IAAa,IAAMC,IAAa,GAAI,CACtC,MAAMC,EAAcC,EAAUjB,EAAUc,EAAUC,CAAQ,EAC1Dd,EAAYe,CAAW,EAGvB,MAAME,EAAerB,EAAgB,IAAKsB,GACxCA,EAAK,QAAUvB,EAAK,MAAQ,CAAE,GAAGuB,EAAM,cAAeH,GAAgBG,CAAA,EAExErB,EAAsBoB,CAAY,CACpC,CACF,CACF,EAEME,EAAa,CAAC1C,EAAeC,IACjCa,EAAAA,IAACf,EAAA,CAAoB,KAAAC,EAA0B,MAAAC,EAAc,aAAciB,EAAK,YAAA,EAA1ClB,EAAK,EAAmD,EAG1F2C,EAAc,IAEhB7B,EAAAA,IAAA8B,WAAA,CACE,SAAAC,EAAAA,KAAC,IAAA,CAAE,UAAU,WAAW,SAAA,CAAA,IAAE3B,EAAK,MAAM,GAAA,CAAA,CAAC,CAAA,CACxC,EAIJ,OACEJ,EAAAA,IAACgC,EAAA,CACC,qBAAiBH,EAAA,EAAY,EAC5B,GAAG1B,EACJ,KAAM,CAAE,GAAGC,EAAM,WAAO6B,EAAA,CAAS,IAAK7B,EAAK,IAAA,CAAgB,CAAA,EAC3D,SAAAJ,EAAAA,IAACkC,EAAA,CAAW,QAAAtB,EAAkB,UAAWM,EACvC,SAAAlB,EAAAA,IAACmC,EAAA,CACC,MAAO3B,EAAS,IAAKtB,GAASA,EAAK,EAAE,EACrC,SAAUkD,EACV,eAACC,EAAA,CAAc,MAAO7B,EAAU,UAAW,GAAO,WAAAoB,CAAA,CAAwB,CAAA,CAAA,CAC5E,CACF,CAAA,CAAA,CAGN"}